// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XpLevelCalculator.Core.DataAccess;

#nullable disable

namespace XpLevelCalculator.Core.Migrations
{
    [DbContext(typeof(XpCalculatorDbContext))]
    [Migration("20240708105448_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("XpLevelCalculator.Core.Models.LevelModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<long>("LevelXp")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalXp")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Levels");
                });
#pragma warning restore 612, 618
        }
    }
}
